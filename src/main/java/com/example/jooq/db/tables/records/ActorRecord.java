/**
 * This class is generated by jOOQ
 */
package com.example.jooq.db.tables.records;


import com.example.jooq.db.tables.Actor;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActorRecord extends UpdatableRecordImpl<ActorRecord> implements Record7<Integer, String, Short, String, Short, Date, Timestamp> {

    private static final long serialVersionUID = -984660967;

    /**
     * Setter for <code>jooqdb.actor.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooqdb.actor.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooqdb.actor.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooqdb.actor.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooqdb.actor.height</code>.
     */
    public void setHeight(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooqdb.actor.height</code>.
     */
    public Short getHeight() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>jooqdb.actor.blood</code>.
     */
    public void setBlood(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooqdb.actor.blood</code>.
     */
    public String getBlood() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooqdb.actor.birthplace_id</code>.
     */
    public void setBirthplaceId(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>jooqdb.actor.birthplace_id</code>.
     */
    public Short getBirthplaceId() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>jooqdb.actor.birthday</code>.
     */
    public void setBirthday(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>jooqdb.actor.birthday</code>.
     */
    public Date getBirthday() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>jooqdb.actor.update_at</code>.
     */
    public void setUpdateAt(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>jooqdb.actor.update_at</code>.
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Short, String, Short, Date, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, Short, String, Short, Date, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Actor.ACTOR.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Actor.ACTOR.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Actor.ACTOR.HEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Actor.ACTOR.BLOOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Actor.ACTOR.BIRTHPLACE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field6() {
        return Actor.ACTOR.BIRTHDAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Actor.ACTOR.UPDATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getBlood();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getBirthplaceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value6() {
        return getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord value3(Short value) {
        setHeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord value4(String value) {
        setBlood(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord value5(Short value) {
        setBirthplaceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord value6(Date value) {
        setBirthday(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord value7(Timestamp value) {
        setUpdateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActorRecord values(Integer value1, String value2, Short value3, String value4, Short value5, Date value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActorRecord
     */
    public ActorRecord() {
        super(Actor.ACTOR);
    }

    /**
     * Create a detached, initialised ActorRecord
     */
    public ActorRecord(Integer id, String name, Short height, String blood, Short birthplaceId, Date birthday, Timestamp updateAt) {
        super(Actor.ACTOR);

        set(0, id);
        set(1, name);
        set(2, height);
        set(3, blood);
        set(4, birthplaceId);
        set(5, birthday);
        set(6, updateAt);
    }
}
